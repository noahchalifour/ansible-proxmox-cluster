- name: "Create token: {{ item }}"
  ansible.builtin.command: pveum user token add {{ pve_auth_tokens_user }} {{ item }}
  register: pve_auth_tokens_create_token
  changed_when: '"Token already exists." not in pve_auth_tokens_create_token.stderr'
  failed_when: 'pve_auth_tokens_create_token.rc != 0 and "Token already exists." not in pve_auth_tokens_create_token.stderr'

- name: Extract the value token from the output
  ansible.builtin.set_fact:
    pve_auth_tokens_token_value: "{{ pve_auth_tokens_create_token.stdout | regex_search('([0-9a-z]*-[0-9a-z]*-[0-9a-z]*-[0-9a-z]*-[0-9a-z]*)') }}"

- name: Write the ansible api token secret to the vault
  community.hashi_vault.vault_kv2_write:
    url: "{{ hashicorp_vault_endpoint }}"
    token: "{{ hashicorp_vault_token }}"
    engine_mount_point: "kv"
    path: "{{ proxmox_api_token_secret_path }}"
    data:
      token_id: "{{ item }}"
      token_secret: "{{ pve_auth_tokens_token_value }}"
  delegate_to: localhost
  when: pve_auth_tokens_token_value != ""
